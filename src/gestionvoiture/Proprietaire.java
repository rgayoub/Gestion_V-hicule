/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gestionvoiture;

import java.io.*;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ayoub
 */
public class Proprietaire extends javax.swing.JFrame {
 private ArrayList<Proprietaireclass1> proprietaireList; 
    private DefaultTableModel modelProprietaire;
    

    
    
    
     public void sauvegarderProprietaires() {
        try (ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream("proprietaires.txt"))) {
            out.writeObject(proprietaireList);
            System.out.println("Propriétaires sauvegardés avec succès !");
        } catch (IOException e) {
            System.err.println("Erreur lors de la sauvegarde des propriétaires : " + e.getMessage());
        }
    }
     
      public void chargerProprietaires() {
    try (ObjectInputStream in = new ObjectInputStream(new FileInputStream("proprietaires.txt"))) {
        proprietaireList = (ArrayList<Proprietaireclass1>) in.readObject();
        System.out.println("Propriétaires chargés avec succès !");
        // Effacer les lignes existantes dans le modèle de tableau
        modelProprietaire.setRowCount(0);
        // Ajouter chaque propriétaire au modèle de tableau
        for (Proprietaireclass1 proprietaire : proprietaireList) {
            modelProprietaire.addRow(new Object[]{proprietaire.getId(), proprietaire.getNom(), proprietaire.getPrenom(), proprietaire.getAdresse(), proprietaire.getTelephone(), proprietaire.getEmail()});
        }
    } catch (IOException | ClassNotFoundException e) {
        System.err.println("Erreur lors du chargement des propriétaires : " + e.getMessage());
        proprietaireList = new ArrayList<>(); // Initialiser une liste vide en cas d'erreur
    }
}


      private void initListeners() {
        // Ajout d'un écouteur de sélection de ligne au tableau TabPropriete
        TabPropriete.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Vérifier si la sélection a été ajustée
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = TabPropriete.getSelectedRow();
                    if (selectedRow != -1) {
                        // Récupérer les données de la ligne sélectionnée dans le tableau
                        int id = Integer.parseInt(modelProprietaire.getValueAt(selectedRow, 0).toString());
                        String nom = modelProprietaire.getValueAt(selectedRow, 1).toString();
                        String prenom = modelProprietaire.getValueAt(selectedRow, 2).toString();
                        String adresse = modelProprietaire.getValueAt(selectedRow, 3).toString();
                        String telephone = modelProprietaire.getValueAt(selectedRow, 4).toString();
                        String email = modelProprietaire.getValueAt(selectedRow, 5).toString();

                        // Afficher les données dans les champs de texte
                        txtId.setText(String.valueOf(id));
                        txtNom.setText(nom);
                        txtPrenom.setText(prenom);
                        txtAdresse.setText(adresse);
                        txtTelephone.setText(telephone);
                        txtEmail.setText(email);
                    }
                }
            }
        });
    }
    /**
     * Creates new form Proprietaire
     */
    public Proprietaire() {
        initComponents();
          proprietaireList = new ArrayList<>();
        modelProprietaire = (DefaultTableModel) TabPropriete.getModel();
        
        initListeners();
      
        
        
          btnLire.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnLireActionPerformed(evt);
        }
    });
        
        // Ajouter BtnModifier et configurer son ActionListener
    btnModifier.setText("Modifier");
    btnModifier.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnModifierActionPerformed(evt);
        }
    });
        
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtNom = new javax.swing.JTextField();
        txtPrenom = new javax.swing.JTextField();
        txtAdresse = new javax.swing.JTextField();
        txtTelephone = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabPropriete = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnModifier = new javax.swing.JButton();
        btnSupprimer = new javax.swing.JButton();
        btnLire = new javax.swing.JButton();
        btnAjouter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID");

        jLabel2.setText("Nom");

        jLabel3.setText("Prenom");

        jLabel4.setText("Adresse");

        jLabel5.setText("Telephone");

        jLabel6.setText("Email");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))))
                .addGap(257, 257, 257)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTelephone)
                    .addComponent(txtId)
                    .addComponent(txtNom)
                    .addComponent(txtPrenom)
                    .addComponent(txtAdresse)
                    .addComponent(txtEmail))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        TabPropriete.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nom", "¨Prenom", "Adresse", "Telephone", "Email"
            }
        ));
        jScrollPane1.setViewportView(TabPropriete);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnModifier.setText("Mettre ajour");
        btnModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifierActionPerformed(evt);
            }
        });

        btnSupprimer.setText("Supprimer");
        btnSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprimerActionPerformed(evt);
            }
        });

        btnLire.setText("Lire");
        btnLire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLireActionPerformed(evt);
            }
        });

        btnAjouter.setText("Ajouter");
        btnAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(btnAjouter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addComponent(btnLire)
                .addGap(88, 88, 88)
                .addComponent(btnModifier)
                .addGap(69, 69, 69)
                .addComponent(btnSupprimer)
                .addGap(48, 48, 48))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSupprimer)
                    .addComponent(btnModifier)
                    .addComponent(btnLire)
                    .addComponent(btnAjouter))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterActionPerformed
         try {
        // Récupérer les données depuis les champs de texte
        int id = Integer.parseInt(txtId.getText().trim());
        String nom = txtNom.getText().trim();
        String prenom = txtPrenom.getText().trim();
        String adresse = txtAdresse.getText().trim();
        String telephone = txtTelephone.getText().trim();
        String email = txtEmail.getText().trim();

        // Validation des champs
        if (!nom.isEmpty() && !prenom.isEmpty() && !adresse.isEmpty() && !telephone.isEmpty() && !email.isEmpty()) {
            // Créer un nouvel objet Proprietaireclass
            Proprietaireclass1 proprietaire = new Proprietaireclass1(id, nom, prenom, adresse, telephone, email);
            proprietaireList.add(proprietaire); // Ajouter à la liste proprietaireList
            modelProprietaire.addRow(new Object[]{id, nom, prenom, adresse, telephone, email});
              sauvegarderProprietaires(); // Sauvegarder les données dans le fichier
            JOptionPane.showMessageDialog(this, "Les données ont été enregistrées avec succès dans le fichier.", "Succès", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Tous les champs doivent être remplis.", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "L'ID doit être un nombre entier.", "Erreur", JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_btnAjouterActionPerformed

    private void btnSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprimerActionPerformed
 int selectedRow = TabPropriete.getSelectedRow();
if (selectedRow != -1) {
    // Afficher une boîte de dialogue de confirmation
    int response = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer cette ligne ?", "Confirmation de suppression", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
    
    // Vérifier la réponse de l'utilisateur
    if (response == JOptionPane.YES_OPTION) {
        // Supprimer la ligne sélectionnée
        proprietaireList.remove(selectedRow);
        modelProprietaire.removeRow(selectedRow);
        sauvegarderProprietaires();
        // Afficher un message informatif après la suppression
        JOptionPane.showMessageDialog(this, "Ligne supprimée avec succès.", "Information", JOptionPane.INFORMATION_MESSAGE);
    }
} else {
    JOptionPane.showMessageDialog(this, "Veuillez sélectionner une ligne à supprimer.", "Erreur", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_btnSupprimerActionPerformed

    private void btnModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierActionPerformed
      // Logique pour mettre à jour un propriétaire existant
        int selectedRow = TabPropriete.getSelectedRow();
        if (selectedRow != -1) {
            int id = Integer.parseInt(txtId.getText().trim());
            String nom = txtNom.getText().trim();
            String prenom = txtPrenom.getText().trim();
            String adresse = txtAdresse.getText().trim();
            String telephone = txtTelephone.getText().trim();
            String email = txtEmail.getText().trim();

            // Mise à jour des valeurs dans la table et la liste
            Proprietaireclass1 proprietaire = proprietaireList.get(selectedRow);
            proprietaire.setId(id);
            proprietaire.setNom(nom);
            proprietaire.setPrenom(prenom);
            proprietaire.setAdresse(adresse);
            proprietaire.setTelephone(telephone);
            proprietaire.setEmail(email);

            modelProprietaire.setValueAt(id, selectedRow, 0);
            modelProprietaire.setValueAt(nom, selectedRow, 1);
            modelProprietaire.setValueAt(prenom, selectedRow, 2);
            modelProprietaire.setValueAt(adresse, selectedRow, 3);
            modelProprietaire.setValueAt(telephone, selectedRow, 4);
            modelProprietaire.setValueAt(email, selectedRow, 5);
            sauvegarderProprietaires();
           // Afficher un message informatif
JOptionPane.showMessageDialog(this, "Propraitaire modifiée avec succès !", "Information", JOptionPane.INFORMATION_MESSAGE);

        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner une ligne à mettre à jour.", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnModifierActionPerformed

    private void btnLireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLireActionPerformed
proprietaireList.clear();
 modelProprietaire.setRowCount(0);
        chargerProprietaires();
    }//GEN-LAST:event_btnLireActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Proprietaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Proprietaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Proprietaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Proprietaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Proprietaire().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabPropriete;
    private javax.swing.JButton btnAjouter;
    private javax.swing.JButton btnLire;
    private javax.swing.JButton btnModifier;
    private javax.swing.JButton btnSupprimer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtAdresse;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtPrenom;
    private javax.swing.JTextField txtTelephone;
    // End of variables declaration//GEN-END:variables
}
